# handlers/admin_handler.py

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from config import ADMIN_ID
from database import get_total_users, get_daily_video_creations, get_daily_payments, add_subscription, get_all_subscriptions, reset_all_subscriptions

router = Router()

@router.message(Command("admin"))
async def admin_panel_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
    if message.from_user.id != ADMIN_ID:
        return
    
    total_users = await get_total_users()
    daily_creations = await get_daily_video_creations()
    daily_payments = await get_daily_payments()
    
    stats_message = (
        "üìà **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å**\n\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: **{total_users}**\n"
        f"üé¨ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: **{daily_creations}**\n"
        f"üí≥ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: **{daily_payments}** –∫—Ä–µ–¥–∏—Ç–æ–≤\n\n"
        "**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏:**\n"
        "/addsub <email>\n"
        "/listsubs\n"
        "/resetsubs"
    )
    
    await message.answer(stats_message)

@router.message(Command("addsub"))
async def add_subscription_handler(message: Message) -> None:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É."""
    if message.from_user.id != ADMIN_ID:
        return
    
    email = message.text.split()[1] if len(message.text.split()) > 1 else None
    
    if not email:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ—á—Ç—É: /addsub <email>")
        return
    
    success = await add_subscription(email)
    
    if success:
        await message.answer(f"–ü–æ—á—Ç–∞ `{email}` —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø—É–ª –ø–æ–¥–ø–∏—Å–æ–∫.")
    else:
        await message.answer(f"–û—à–∏–±–∫–∞: –ü–æ—á—Ç–∞ `{email}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

@router.message(Command("listsubs"))
async def list_subscriptions_handler(message: Message) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å."""
    if message.from_user.id != ADMIN_ID:
        return
    
    subscriptions = await get_all_subscriptions()
    
    if not subscriptions:
        await message.answer("–ü—É–ª –ø–æ–¥–ø–∏—Å–æ–∫ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–æ—á—Ç—ã —Å –ø–æ–º–æ—â—å—é /addsub.")
        return
        
    stats_message = "üìß **–ü—É–ª –ø–æ–¥–ø–∏—Å–æ–∫:**\n\n"
    for email, usage, limit in subscriptions:
        stats_message += f"`{email}`: {usage} –∏–∑ {limit} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π\n"
        
    await message.answer(stats_message)

@router.message(Command("resetsubs"))
async def reset_subscriptions_handler(message: Message) -> None:
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫."""
    if message.from_user.id != ADMIN_ID:
        return
    
    await reset_all_subscriptions()
    await message.answer("–°—á—ë—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ —Å–±—Ä–æ—à–µ–Ω—ã.")