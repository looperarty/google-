# handlers/video_handler.py

from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from database import get_user_balance, deduct_balance_and_use_subscription
from handlers.menu_handler import create_main_menu_keyboard
from handlers.common_handlers import create_back_keyboard, delete_message_if_exists, simulate_progress_bar
from config import ADMIN_ID

router = Router()

VIDEO_COST = 10

class VideoCreationState(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ."""
    waiting_for_prompt = State()
    waiting_for_admin_response = State()

@router.message(F.text == "üé¨ –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ")
async def start_video_creation(message: Message, state: FSMContext, bot: Bot):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ."""
    await delete_message_if_exists(bot, message.chat.id, message.message_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –±–∞–ª–∞–Ω—Å–∞
    if message.from_user.id != ADMIN_ID:
        balance = await get_user_balance(message.from_user.id)
        if balance < VIDEO_COST:
            sent_message = await message.answer(f"–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: **{VIDEO_COST}** –∫—Ä–µ–¥–∏—Ç–æ–≤, —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: **{balance}**.")
            await state.update_data(bot_message_id=sent_message.message_id)
            return
        
    await state.set_state(VideoCreationState.waiting_for_prompt)
    sent_message = await message.answer(
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º—Ç –¥–ª—è –≤–∏–¥–µ–æ. –û–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å:",
        reply_markup=await create_back_keyboard()
    )
    await state.update_data(bot_message_id=sent_message.message_id)

@router.message(VideoCreationState.waiting_for_prompt)
async def process_video_prompt(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –∞–¥–º–∏–Ω—É."""
    state_data = await state.get_data()
    bot_message_id = state_data.get('bot_message_id')
    
    await delete_message_if_exists(bot, message.chat.id, bot_message_id)
    await delete_message_if_exists(bot, message.chat.id, message.message_id)
    
    user_prompt = message.text
    user_id = message.from_user.id

    await simulate_progress_bar(message, bot)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º—Ç –∞–¥–º–∏–Ω—É
    await bot.send_message(
        chat_id=ADMIN_ID,
        text=f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{user_id}`:\n\n**–ü—Ä–æ–º—Ç:** `{user_prompt}`",
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∞
    await state.set_state(VideoCreationState.waiting_for_admin_response)
    
    keyboard = await create_main_menu_keyboard()
    await message.answer(
        "–¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–æ–∑–¥–∞–¥–∏–º –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ —Ç–µ–±–µ. –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.",
        reply_markup=keyboard
    )
    await state.clear()