# handlers/free_generation_handler.py

from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from handlers.common_handlers import create_back_keyboard, simulate_progress_bar
from handlers.menu_handler import create_main_menu_keyboard
from database import get_free_generations_used, use_free_generation
from config import PROMPTS_CHANNEL_LINK, ADMIN_ID

router = Router()

class FreeGenerationState(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    waiting_for_prompt = State()
    waiting_for_admin_response = State()

@router.message(F.text == "üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
async def free_generation_handler(message: Message, state: FSMContext, bot: Bot) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è'."""
    await delete_message_if_exists(bot, message.chat.id, message.message_id)
    
    free_uses = await get_free_generations_used(message.from_user.id)
    
    if free_uses > 0:
        await message.answer("–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–≤–æ—é –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é. –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ã.")
        return
    
    await state.set_state(FreeGenerationState.waiting_for_prompt)
    sent_message = await message.answer(
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–º—Ç –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ. –û–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å:",
        reply_markup=await create_back_keyboard()
    )
    await state.update_data(bot_message_id=sent_message.message_id)

@router.message(FreeGenerationState.waiting_for_prompt)
async def process_free_prompt(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–º—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –∞–¥–º–∏–Ω—É."""
    state_data = await state.get_data()
    bot_message_id = state_data.get('bot_message_id')
    
    await delete_message_if_exists(bot, message.chat.id, bot_message_id)
    await delete_message_if_exists(bot, message.chat.id, message.message_id)
    
    user_prompt = message.text
    user_id = message.from_user.id
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —à–∫–∞–ª—É –∑–∞–≥—Ä—É–∑–∫–∏
    await simulate_progress_bar(message, bot)

    await use_free_generation(user_id)
    
    await bot.send_message(
        chat_id=ADMIN_ID,
        text=f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ë–ï–°–ü–õ–ê–¢–ù–û–ï –≤–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{user_id}`:\n\n**–ü—Ä–æ–º—Ç:** `{user_prompt}`",
    )
    
    keyboard = await create_main_menu_keyboard()
    await message.answer(
        "–¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–æ–∑–¥–∞–¥–∏–º –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ —Ç–µ–±–µ.",
        reply_markup=keyboard
    )
    await state.clear()