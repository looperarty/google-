# handlers/common_handlers.py

import asyncio
from aiogram import Router, F, Bot
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from handlers.menu_handler import create_main_menu_keyboard

router = Router()

async def create_back_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'."""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

async def delete_message_if_exists(bot: Bot, chat_id: int, message_id: int | None):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ ID —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
    if message_id:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=message_id)
        except Exception:
            pass

async def simulate_progress_bar(message: Message, bot: Bot):
    """
    –°–∏–º—É–ª–∏—Ä—É–µ—Ç —à–∫–∞–ª—É –∑–∞–≥—Ä—É–∑–∫–∏, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    progress_message = await bot.send_message(
        chat_id=message.chat.id,
        text="üé¨ –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ..."
    )
    
    stages = ["", "‚ñì‚ñë‚ñë‚ñë", "‚ñì‚ñì‚ñë‚ñë", "‚ñì‚ñì‚ñì‚ñë", "‚ñì‚ñì‚ñì‚ñì"]
    
    for stage in stages:
        await bot.edit_message_text(
            text=f"üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: {stage}",
            chat_id=message.chat.id,
            message_id=progress_message.message_id
        )
        await asyncio.sleep(1) # –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É

    await bot.edit_message_text(
        text="üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
        chat_id=message.chat.id,
        message_id=progress_message.message_id
    )

@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_handler(message: Message, state: FSMContext, bot: Bot) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'."""
    current_state = await state.get_state()
    if current_state is None:
        return
    
    state_data = await state.get_data()
    await delete_message_if_exists(bot, message.chat.id, state_data.get('bot_message_id'))
    
    await state.clear()
    keyboard = await create_main_menu_keyboard()
    await message.answer(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=keyboard
    )